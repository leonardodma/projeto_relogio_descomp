tmp(0) := "1001000001101";	-- JSR FUNC_14			#Deve desviar para a posição 14
tmp(1) := "0110000000100";	-- JMP FUNC_5			#Deve desviar para a posição 5
tmp(2) := "0111000001000";	-- JEQ FUNC_9			#Deve desviar para a posição 9
tmp(3) := "0000000000000";	-- NOP			
tmp(4) := "0000000000000";	-- NOP			
tmp(5) := "0100000000101";	-- LDI $5				#Carrega acumulador com valor 5
tmp(6) := "0101100000000";	-- STA @256			#Armazena 5 na posição 256 da memória
tmp(7) := "1000100000000";	-- CEQ @256			#A comparação deve fazer o flagIgual ser 1
tmp(8) := "0110000000001";	-- JMP FUNC_2			#vai testar o flagIgual depois do jump
tmp(9) := "0000000000000";	-- NOP			
tmp(10) := "0100000000100";	-- LDI $4				#Carrega acumulador com valor 4
tmp(11) := "1000100000000";	-- CEQ @256			#Compara com valor 5, deve fazer o flagIgual ser 0
tmp(12) := "0111000000010";	-- JEQ FUNC_3			#Não deve ocorrer o desvio
tmp(13) := "0110000001100";	-- JMP FUNC_13		#Fim. Deve ficar neste laço
tmp(14) := "0000000000000";	-- NOP		
tmp(15) := "1010000000000";	-- RET				#Retorna para a posição 1
